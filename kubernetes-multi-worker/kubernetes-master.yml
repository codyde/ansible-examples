- name: Install Kubernetes
  hosts: all
  connection: ssh
  gather_facts: yes
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: "Disabling Swap"
      command: swapoff -a

    - name: "Adding Docker Key"
      apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: present

    - name: "Adding Kubernetes Key"
      apt_key:
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
        state: present

    - name: "Add Docker Repository"
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    - name: "Add Kubernetes Repository"
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: "Update APT Packages"
      apt:
        upgrade: yes
        update_cache: yes

    - name: "Stage Docker Folder"
      file:
        path: /etc/docker
        state: directory

    - name: "Create Kubernetes Directory"
      file:
        path: /etc/kubernetes
        state: directory

    - name: "Import vSphere Provider Conf"
      copy:
        src: vsphere.conf
        dest: /etc/kubernetes/vsphere.conf

    - name: "Import Kubeadm Init Config"
      template:
        src: kubeadminitmaster.yaml
        dest: /etc/kubernetes/kubeadminitmaster.yaml

    - name: "Import Docker Daemon JSON"
      copy:
        src: daemon.json
        dest: /etc/docker/daemon.json

    - name: "Install Docker CE"
      package: name=docker-ce state=present

    - name: "Enable Systemd Docker Service"
      command: systemctl enable docker

    - name: "Install transport-https"
      apt:
        name: apt-transport-https

    - name: "Installing Kubernetes Packages"
      apt:
        name: "{{ items }}"
      vars:
        items:
          - kubelet
          - kubeadm
          - kubectl
          - selinux-utils

    - name: Stage Kubelet Directory
      file:
        path: /etc/default/kubelet
        state: touch

    - name: "Configure Node IP"
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_default_ipv4.address }}

    - name: "Restart Kubelet"
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: "Pulling Kubeadm Images"
      command: kubeadm config images pull

    - name: "Initializing Kubernetes"
      command: kubeadm init --apiserver-advertise-address={{ ansible_default_ipv4.address }} --apiserver-cert-extra-sans={{ ansible_default_ipv4.address }}

    - name: "Configuring Kubectl"
      shell: mkdir -p $HOME/.kube;cp /etc/kubernetes/admin.conf $HOME/.kube/config;chown $(id -u):$(id -g) $HOME/.kube/config

    - name: "Configuring Kubernetes Network"
      shell: kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml

    - name: "Generate Token"
      command: kubeadm token create --print-join-command
      register: join_command

    - name: "Copy Join to Local"
      local_action: copy content="{{join_command.stdout_lines[0]}}" dest="./join-command"

    - name: "Create Discovery YAML"
      command: kubectl -n kube-public get configmap cluster-info -o jsonpath='{.data.kubeconfig}'
      register: output_command

    - name: "Copy YAML to Local"
      local_action: copy content="{{output_command.stdout_lines[0]}}" dest="./discovery.yaml"